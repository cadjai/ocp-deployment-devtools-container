ARG BASE_IMAGE="registry.redhat.io/rhel9/podman:latest"
ARG PYCMD="/usr/bin/python3"
ARG PKGMGR="/usr/bin/microdnf"
ARG ANSIBLE_GALAXY_CLI_COLLECTION_OPTS=""
RG SUMMARY="Bastion Container for running day two plus playbooks"
ARG NAME="Bastion Container Image"
ARG MAINTAINER="The Platform team <platformteam@test.org>"

FROM $BASE_IMAGE 
USER root
ARG BASE_IMAGE
ARG PYCMD
ARG PKGMGR
ARG ANSIBLE_GALAXY_CLI_COLLECTION_OPTS
ARG SUMMARY
ARG NAME
ARG MAINTAINER

LABEL summary="$SUMMARY" \
      description="$SUMMARY" \
      io.k8s.description="$SUMMARY" \
      io.k8s.display-name="$NAME" \
      name="$NAME" \
      version="1" \
      usage="podman run -it --rm --name my-podman-ee-test localhost/podman-bastion bash " \
      maintainer="$MAINTAINER"

RUN INSTALL_PKGS=" python38-devel python38-setuptools ansible-core \
        bash-completion unzip dnf git jq skopeo bind-utils podman openscap-scanner httpd-tools \
        wget python38 python38-pip zip vim-enhanced curl bzip2 python3-libselinux-2.9-8.el9.x86_64" && \
    yum -y --setopt=tsflags=nodocs install $INSTALL_PKGS && \
    rpm -V $INSTALL_PKGS && \
    yum -y clean all --enablerepo='*' && \
    rm -rf /var/cache/* /var/log/dnf* /var/log/yum.*

RUN $PYCMD -m ensurepip --upgrade

RUN $PYCMD -m pip install --no-cache-dir bindep pyyaml requirements-parser ansible-builder ansible-lint molecule

COPY _build/scripts/entrypoint /opt/builder/bin/entrypoint
COPY _build /build

RUN ansible-galaxy role install $ANSIBLE_GALAXY_CLI_ROLE_OPTS -r /build/requirements.yml --roles-path "/usr/share/ansible/roles"
RUN ANSIBLE_GALAXY_DISABLE_GPG_VERIFY=1 ansible-galaxy collection install $ANSIBLE_GALAXY_CLI_COLLECTION_OPTS -r /build/requirements.yml --collections-path "/usr/share/ansible/collections" -vvv
RUN ls -la /build /build/clients
RUN unzip /build/clients/awscli.zip -d /aws
RUN /aws/aws/install
RUN unzip /build/clients/terraform.zip -d /bin
RUN unzip /build/clients/terraform-provider-aws.zip -d /bin
RUN tar xzf /build/clients/openshift-client-linux.tar.gz -C /bin
RUN tar xzf /build/clients/oc-mirror.tar.gz -C /bin
RUN chmod a+x /bin/oc-mirror
RUN tar xzf /build/clients/helm.tar.gz -C /tmp  --no-same-owner
RUN mv /tmp/helm-linux-amd64 /bin/helm
RUN chmod a+x /bin/helm 

RUN chmod ug+rw /etc/passwd
RUN mkdir -p /runner && chgrp 0 /runner && chmod -R ug+rwx /runner
WORKDIR /runner
RUN $PYCMD -m pip install --no-cache-dir 'dumb-init==1.2.5'
RUN rm -rf /build
#RUN rm -rf /output /build
LABEL ansible-execution-environment=true
USER 1000
ENTRYPOINT ["/opt/builder/bin/entrypoint", "dumb-init"]
CMD ["bash"]
